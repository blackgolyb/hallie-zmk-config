#undef ZMK_BEHAVIORS_KEEP_ALL

#define ZMK_BEHAVIORS_KEEP_IND
#define ZMK_BEHAVIORS_KEEP_BT
#define ZMK_BEHAVIORS_KEEP_GRESC
#define ZMK_BEHAVIORS_KEEP_SYS_RESET
#define ZMK_BEHAVIORS_KEEP_BOOTLOADER
#define ZMK_BEHAVIORS_KEEP_CAPS_WORD
#define ZMK_BEHAVIORS_KEEP_KEY_REPEAT
#define ZMK_BEHAVIORS_KEEP_KT
#define ZMK_BEHAVIORS_KEEP_LT
#define ZMK_BEHAVIORS_KEEP_MT
#define ZMK_BEHAVIORS_KEEP_SK
#define ZMK_BEHAVIORS_KEEP_STICKY_LAYER
#define ZMK_BEHAVIORS_KEEP_TO
#define ZMK_BEHAVIORS_KEEP_TOG
#define ZMK_BEHAVIORS_KEEP_TRANS

#include <dt-bindings/zmk/indicators.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define DEF 0
#define NAV 1
#define NUM 2
#define SYM 3
#define MSE 4
#define ADJ 5


&lt { quick_tap_ms = <200>; };

&mt { quick_tap_ms = <200>; };

/ {
    behaviors {
        move_u_d: behavior_sensor_rotate_mouse_move_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            tap-ms = <20>;
            bindings = <&mmv MOVE_UP>, <&mmv MOVE_DOWN>;

            display-name = "Mouse move (UD)";
        };

        move_l_r: behavior_sensor_rotate_mouse_move_left_right {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            tap-ms = <20>;
            bindings = <&mmv MOVE_LEFT>, <&mmv MOVE_RIGHT>;

            display-name = "Mouse move (LR)";
        };

        htmk: htmk {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_MOD_KEY";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "balanced";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default {
            bindings = <
&kp TAB     &kp Q  &kp W  &kp E    &kp R          &kp T               &kp Y          &kp U                &kp I      &kp O    &kp P      &kp LEFT_BRACE
&kp CAPS    &kp A  &kp S  &kp D    &kp F          &kp G               &kp H          &kp J                &kp K      &kp L    &kp SEMI   &kp SQT
&kp ESCAPE  &kp Z  &kp X  &kp C    &kp V          &kp B               &kp N          &kp M                &kp COMMA  &kp DOT  &kp SLASH  &kp RIGHT_BRACE
                          &mo ADJ  &htmk MSE TAB  &htmk NAV SPACE     &htmk SYM RET  &htmk NUM BACKSPACE  &kp DELETE
            >;
            sensor-bindings = <&move_l_r &move_u_d>;
        };

        navigation {
            bindings = <
&none  &none  &none  &none  &none    &none         &none    &none          &none  &none  &none  &none
&none  &none  &none  &none  &none    &none         &none    &none          &none  &none  &none  &none
&none  &none  &none  &none  &none    &none         &none    &none          &none  &none  &none  &none
                     &none  &kp TAB  &kp SPACE     &kp RET  &kp BACKSPACE  &kp DELETE
            >;
            sensor-bindings = <&none &none>;
        };

        numbers {
            bindings = <
&none  &none  &none  &none  &none    &none         &none    &none          &none  &none  &none  &none
&none  &none  &none  &none  &none    &none         &none    &none          &none  &none  &none  &none
&none  &none  &none  &none  &none    &none         &none    &none          &none  &none  &none  &none
                     &none  &kp TAB  &kp SPACE     &kp RET  &kp BACKSPACE  &kp DELETE
            >;
            sensor-bindings = <&none &none>;
        };

        symbols {
            bindings = <
&none  &none  &none  &none  &none    &none         &none    &none          &none  &none  &none  &none
&none  &none  &none  &none  &none    &none         &none    &none          &none  &none  &none  &none
&none  &none  &none  &none  &none    &none         &none    &none          &none  &none  &none  &none
                     &none  &kp TAB  &kp SPACE     &kp RET  &kp BACKSPACE  &kp DELETE
            >;
            sensor-bindings = <&none &none>;
        };

        mouse {
            bindings = <
&none  &none  &none  &none  &none    &none         &none    &none          &none  &none  &none  &none
&none  &none  &none  &none  &none    &none         &none    &none          &none  &none  &none  &none
&none  &none  &none  &none  &none    &none         &none    &none          &none  &none  &none  &none
                     &none  &kp TAB  &kp SPACE     &kp RET  &kp BACKSPACE  &kp DELETE
            >;
            sensor-bindings = <&none &none>;
        };

        adjust {
            bindings = <
&out OUT_BLE  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2    &bt BT_CLR   &out OUT_USB    &none        &none        &none    &none  &none  &none
&none         &none         &none         &none           &none        &none           &none        &none        &none    &none  &none  &none
&sys_reset    &bootloader   &none         &studio_unlock  &ind IND_ON  &ind BAT_ST     &ind IND_ON  &ind BAT_ST  &none    &none  &none  &none
                                          &mo ADJ         &mo LWR      &kp SPACE       &kp ENTER    &mo LWR      &mo RSE
            >;
            sensor-bindings = <&inc_dec_kp DOWN_ARROW UP_ARROW &inc_dec_kp RIGHT_ARROW LEFT_ARROW>;
        };

        sample {
            bindings = <
&none  &none  &none  &none  &none    &none         &none    &none          &none  &none  &none  &none
&none  &none  &none  &none  &none    &none         &none    &none          &none  &none  &none  &none
&none  &none  &none  &none  &none    &none         &none    &none          &none  &none  &none  &none
                     &none  &kp TAB  &kp SPACE     &kp RET  &kp BACKSPACE  &kp DELETE
            >;
            sensor-bindings = <&none &none>;
        };
    };
};
